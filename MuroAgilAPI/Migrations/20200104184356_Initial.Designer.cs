// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MuroAgilAPI.Models;

namespace MuroAgilAPI.Migrations
{
    [DbContext(typeof(MuroAgilContext))]
    [Migration("20200104184356_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MuroAgilAPI.Models.Etapa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdMuro")
                        .HasColumnName("ID_MURO");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("NOMBRE")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<short>("Posicion")
                        .HasColumnName("POSICION");

                    b.HasKey("Id");

                    b.HasIndex("IdMuro");

                    b.ToTable("ETAPA");
                });

            modelBuilder.Entity("MuroAgilAPI.Models.Muro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("FechaUltimaModificacion")
                        .HasColumnName("FECHA_ULTIMA_MODIFICACION")
                        .HasColumnType("datetime");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("NOMBRE")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("MURO");
                });

            modelBuilder.Entity("MuroAgilAPI.Models.Tarea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("Blue")
                        .HasColumnName("BLUE");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnName("DESCRIPCION")
                        .IsUnicode(false);

                    b.Property<short>("Familia")
                        .HasColumnName("FAMILIA");

                    b.Property<short>("Green")
                        .HasColumnName("GREEN");

                    b.Property<int>("IdEtapa")
                        .HasColumnName("ID_ETAPA");

                    b.Property<short>("Posicion")
                        .HasColumnName("POSICION");

                    b.Property<short>("Red")
                        .HasColumnName("RED");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnName("TITULO")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("IdEtapa");

                    b.ToTable("TAREA");
                });

            modelBuilder.Entity("MuroAgilAPI.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasColumnName("CORREO")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<DateTime>("FechaCreacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FECHA_CREACION")
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("('0001-01-01T00:00:00.000')");

                    b.Property<DateTime?>("FechaRecupContr")
                        .HasColumnName("FECHA_RECUP_CONTR")
                        .HasColumnType("datetime");

                    b.Property<string>("HashContrasenna")
                        .IsRequired()
                        .HasColumnName("HASH_CONTRASENNA")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnName("NOMBRE")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("TokenRecupContr")
                        .HasColumnName("TOKEN_RECUP_CONTR")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("TokenVerificador")
                        .HasColumnName("TOKEN_VERIFICADOR")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("Correo")
                        .IsUnique()
                        .HasName("UQ__USUARIO__CC87E1260BB751F7");

                    b.ToTable("USUARIO");
                });

            modelBuilder.Entity("MuroAgilAPI.Models.UsuarioMuro", b =>
                {
                    b.Property<int>("IdDuenno")
                        .HasColumnName("ID_DUENNO");

                    b.Property<int>("IdMuro")
                        .HasColumnName("ID_MURO");

                    b.Property<short>("Permiso")
                        .HasColumnName("PERMISO");

                    b.HasKey("IdDuenno", "IdMuro");

                    b.HasIndex("IdMuro");

                    b.ToTable("USUARIO_MURO");
                });

            modelBuilder.Entity("MuroAgilAPI.Models.Etapa", b =>
                {
                    b.HasOne("MuroAgilAPI.Models.Muro", "IdMuroNavigation")
                        .WithMany("Etapa")
                        .HasForeignKey("IdMuro")
                        .HasConstraintName("FK__ETAPA__ID_MURO__22401542")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MuroAgilAPI.Models.Tarea", b =>
                {
                    b.HasOne("MuroAgilAPI.Models.Etapa", "IdEtapaNavigation")
                        .WithMany("Tarea")
                        .HasForeignKey("IdEtapa")
                        .HasConstraintName("FK__TAREA__ID_ETAPA__251C81ED")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("MuroAgilAPI.Models.UsuarioMuro", b =>
                {
                    b.HasOne("MuroAgilAPI.Models.Usuario", "IdDuennoNavigation")
                        .WithMany("UsuarioMuro")
                        .HasForeignKey("IdDuenno")
                        .HasConstraintName("FK__USUARIO_M__ID_DU__1E6F845E")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("MuroAgilAPI.Models.Muro", "IdMuroNavigation")
                        .WithMany("UsuarioMuro")
                        .HasForeignKey("IdMuro")
                        .HasConstraintName("FK__USUARIO_M__ID_MU__1F63A897")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
